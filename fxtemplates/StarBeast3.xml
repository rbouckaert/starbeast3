<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beast version="2.6" 
	namespace="beast.app.beauti:beast.pkgmgmt:beast.base.core:beast.base.inference:beast.base.evolution.branchratemodel:beast.base.evolution.speciation:beast.base.evolution.tree.coalescent:beast.pkgmgmt:beast.base.core:beast.base.inference.util:beast.evolution.nuc:beast.base.evolution.operator:beast.base.inference.operator:beast.base.evolution.sitemodel:beast.base.evolution.substitutionmodel:beast.base.evolution.likelihood:beast.evolution:beast.base.math.distributions" 
	templateinfo="StarBeast3 template for fast multispecies coalescent inference.">

    
<map name="Beta">beast.base.inference.distribution.Beta</map>
<map name="Exponential">beast.base.inference.distribution.Exponential</map>
<map name="InverseGamma">starbeast3.math.distributions.InverseGamma</map>
<map name="LogNormal">beast.base.inference.distribution.LogNormalDistributionModel</map>
<map name="Gamma">beast.base.inference.distribution.Gamma</map>
<map name="Uniform">beast.base.inference.distribution.Uniform</map>
<map name="LaplaceDistribution">beast.base.inference.distribution.LaplaceDistribution</map>
<map name="OneOnX">beast.base.inference.distribution.OneOnX</map>
<map name="Normal">beast.base.inference.distribution.Normal</map>

<map name="prior">beast.base.inference.distribution.Prior</map>
<map name="connect" reserved="true">beastfx.app.inputeditor.BeautiConnector</map>
<map name="subtemplate" reserved="true">beastfx.app.inputeditor.BeautiSubTemplate</map>


	<beauticonfig spec="beastfx.app.inputeditor.BeautiConfig"
		inputLabelMap="beast.base.inference.MCMC.operator=Operators,
			beast.base.inference.MCMC.logger=Loggers,
			beast.base.evolution.sitemodel.SiteModel.mutationRate=Substitution Rate,
			beast.base.evolution.speciation.SpeciesTreePrior.gammaParameter=Population Mean"
		inlinePlugins ="beast.base.inference.MCMC.distribution,
			beast.base.evolution.sitemodel.SiteModel.substModel,
			beast.base.evolution.tree.coalescent.ExponentialGrowth,
			beast.base.evolution.tree.coalescent.ConstantPopulation,
			beast.base.evolution.tree.coalescent.Coalescent,
			beast.base.inference.State.stateNode"
		collapsedPlugins ="beast.base.inference.MCMC.logger"
		suppressPlugins = "beast.base.inference.MCMC.operator,
			beast.base.inference.MCMC.operatorschedule,
			beast.base.inference.MCMC.state,
			beast.base.inference.MCMC.distribution,
			beast.base.inference.MCMC.init,
			beast.base.evolution.speciation.BirthDeathGernhard08Model.treeIntervals,
			beast.base.evolution.speciation.BirthDeathGernhard08Model.type,
			beast.base.evolution.speciation.BirthDeathGernhard08Model.sampleProbability,
			beast.base.evolution.speciation.BirthDeathGernhard08Model.tree,
			beast.evolution.speciation.SABirthDeathModel.removalProbability,
			beast.evolution.speciation.SABirthDeathModel.treeIntervals,
			beast.evolution.speciation.SABirthDeathModel.birthRate,
			beast.evolution.speciation.SABirthDeathModel.deathRate,
			beast.evolution.speciation.SABirthDeathModel.samplingRate,
			beast.evolution.speciation.SABirthDeathModel.conditioningOnRoot,
			beast.evolution.speciation.SABirthDeathModel.tree,
			beast.evolution.speciation.SABirthDeathModel.expectedN,
			beast.evolution.speciation.SABirthDeathModel.treeWOffset,
			beast.base.evolution.tree.Tree,
			beast.base.evolution.tree.Tree.trait,
			beast.base.evolution.tree.Tree.taxa,
			beast.base.evolution.tree.Tree.taxonset,
			beast.base.evolution.tree.coalescent.RandomTree.trait,
			beast.base.evolution.tree.coalescent.RandomTree.initial,
			beast.base.evolution.tree.coalescent.RandomTree.taxa,
			beast.base.evolution.tree.coalescent.RandomTree.taxonset,
			beast.base.evolution.tree.coalescent.RandomTree.estimate,
			beast.base.evolution.tree.TreeParser.initial,
			beast.base.evolution.tree.TreeParser.taxa,
			beast.base.evolution.tree.TreeParser.taxonset,
			beast.base.evolution.tree.TreeParser.trait,
			beast.base.evolution.tree.TreeParser.estimate,
			beast.base.evolution.tree.ClusterTree.initial,
			beast.base.evolution.tree.ClusterTree.taxa,
			beast.base.evolution.tree.ClusterTree.taxonset,
			beast.base.evolution.tree.ClusterTree.trait,
			beast.base.evolution.tree.ClusterTree.estimate,
			beast.base.evolution.substitutionmodel.WAG.rates,
			beast.base.evolution.substitutionmodel.WAG.frequencies,
			beast.base.evolution.substitutionmodel.JTT.rates,
			beast.base.evolution.substitutionmodel.JTT.frequencies,
			beast.base.evolution.substitutionmodel.Blosum62.rates,
			beast.base.evolution.substitutionmodel.Blosum62.frequencies,
			beast.base.evolution.substitutionmodel.Dayhoff.rates,
			beast.base.evolution.substitutionmodel.Dayhoff.frequencies,
			beast.base.evolution.substitutionmodel.CPREV.rates,
			beast.base.evolution.substitutionmodel.CPREV.frequencies,
			beast.base.evolution.substitutionmodel.MTREV.rates,
			beast.base.evolution.substitutionmodel.MTREV.frequencies,
			beast.base.evolution.substitutionmodel.GTR.rates,
			beast.base.evolution.substitutionmodel.JukesCantor.frequencies,
			beast.base.inference.distribution.Prior.x,
			beast.base.evolution.tree.MRCAPrior.tree,
			beast.base.evolution.tree.MRCAPrior.monophyletic,
			beast.base.evolution.tree.MRCAPrior.taxonset,
			beast.base.evolution.branchratemodel.UCRelaxedClockModel.tree,
			beast.base.evolution.branchratemodel.UCRelaxedClockModel.rateCategories,
			beast.base.evolution.branchratemodel.RandomLocalClockModel.tree,
			beast.base.evolution.branchratemodel.RandomLocalClockModel.meanRate,
			beast.base.evolution.branchratemodel.RandomLocalClockModel.indicators,
			beast.base.evolution.operator.ScaleOperator.indicator,
			beast.base.inference.Operator.weight,
			beast.base.evolution.speciation.YuleModel.treeIntervals,
			beast.base.evolution.speciation.YuleModel.useTipDates,
			beast.base.evolution.speciation.YuleModel.tree,
			beast.base.inference.Logger.model,
			starbeast3.GeneTree.tree,
			starbeast3.GeneTree.speciesTree,
			starbeast3.GeneTree.populationModel,
			starbeast3.UncorrelatedRates.rates,
			starbeast3.UncorrelatedRates.noCache,
			starbeast3.RandomLocalRates.rates,
			starbeast3.RandomLocalRates.noCache,
			starbeast3.ConstantPopulations.speciesTree,
			starbeast3.LinearWithConstantRoot.speciesTree,			
			starbeast3.evolution.speciation.GeneTreeForSpeciesTreeDistribution.useTipDates,
			starbeast3.evolution.speciation.GeneTreeForSpeciesTreeDistribution.sampling,
			starbeast3.evolution.speciation.GeneTreeForSpeciesTreeDistribution.tree,
			starbeast3.evolution.speciation.GeneTreeForSpeciesTreeDistribution.populationModel,
			starbeast3.evolution.speciation.GeneTreeForSpeciesTreeDistribution.speciesTree,
			starbeast3.evolution.speciation.GeneTreeForSpeciesTreeDistribution.speciesTreePrior,
			starbeast3.evolution.speciation.GeneTreeForSpeciesTreeDistribution.treeIntervals,
			starbeast3.evolution.speciation.SpeciesTreePrior.popFunction,
			starbeast3.evolution.speciation.SpeciesTreePrior.taxonset,
			starbeast3.evolution.speciation.SpeciesTreePrior.popFunction,
			starbeast3.evolution.speciation.SpeciesTreePrior.tree,
			starbeast3.evolution.speciation.SpeciesTreePrior.treePrior,
			starbeast3.evolution.speciation.SpeciesTreePrior.topPopSize,
			starbeast3.evolution.speciation.SpeciesTreePrior.bottomPopSize,
			starbeast3.evolution.speciation.SpeciesTreePrior.populationModel,
			starbeast3.evolution.speciation.SpeciesTreePrior.treeIntervals,
			starbeast3.evolution.branchratemodel.StrictClockModelSB3.tree,
			starbeast3.evolution.branchratemodel.StarBeast3Clock.speciesTreeRates,
			starbeast3.evolution.branchratemodel.StarBeast3Clock.sharedRateModel,
			starbeast3.evolution.branchratemodel.StarBeast3Clock.geneTree,
			starbeast3.evolution.branchratemodel.StarBeast3Clock.kernel,
			starbeast3.evolution.branchratemodel.StarBeast3Clock.pointer,
			starbeast3.evolution.branchratemodel.UCRelaxedClockModelSB3.estimateRoot,
			starbeast3.evolution.branchratemodel.UCRelaxedClockModelSB3.noCache,
			starbeast3.evolution.branchratemodel.UCRelaxedClockModelSB3.discreteRates,
			starbeast3.evolution.branchratemodel.UCRelaxedClockModelSB3.realRates,
			starbeast3.evolution.branchratemodel.UCRelaxedClockModelSB3.rateQuantiles,
			starbeast3.evolution.branchratemodel.UCRelaxedClockModelSB3.tree,
			starbeast3.evolution.branchratemodel.UCRelaxedClockModelSB3.nBins,
			starbeast3.evolution.branchratemodel.UCRelaxedClockModelSB3.distr"
		buttonLabelMap="beast.app.beauti.BeautiInitDlg.&gt;&gt; details=Edit parameters"
		hmc='BirthDeath/index/,
popMean/index/=Priors/PopSizePrior/,
treePrior/ploidy/index/,
RandomTree/rootHeight/,
RandomTree/adjustTreeNodeHeights/,
StrictClock/clock.rate/,
FrequenciesExchanger/weightvector/,
FrequenciesExchanger/delta/,
FrequenciesExchanger/integer/,
FrequenciesExchanger/weight/,
FrequenciesExchanger/autoOptimize/,
BayesianSkyline/index/,
ConstantPopulation0/popSize/,
mcmc/numInitializationAttempts/,
mcmc/preBurnin/,
mcmc/storeEvery/,
mcmc/operatorschedule/,
mcmc/chainLength/,
mcmc/sampleFromPrior/,
tracelog/fileName/,
tracelog/sort/,
tracelog/sanitiseHeaders/,
tracelog/logEvery/,
tracelog/mode/,
ExtendedBayesianSkyline/index/,
CalibratedYuleModel/index/,
treeLikelihood/siteModel/,
treeLikelihood/branchRateModel/,
OperatorSchedule/detailedRejection/,
OperatorSchedule/autoOptimizeDelay/,
OperatorSchedule/transform/,
OperatorSchedule/weight/,
OperatorSchedule/weightIsPercentage/,
OperatorSchedule/autoOptimize/,
screenlog/fileName/,
screenlog/sort/,
screenlog/sanitiseHeaders/,
screenlog/logEvery/,
screenlog/mode/,
CoalescentExponential/index/,
NewickTree/adjustTipHeights/,
NewickTree/newick/,
NewickTree/IsLabelledNewick/,
NewickTree/adjustTreeNodeHeights/,
NewickTree/offset/,
NewickTree/threshold/,
NewickTree/scale/,
NewickTree/binarizeMultifurcations/,
NewickTree/singlechild/,
MarkovChainedPopSizes/reverse/,
MarkovChainedPopSizes/parameter/,
MarkovChainedPopSizes/uselog/,
MarkovChainedPopSizes/jeffreys/,
MarkovChainedPopSizes/shape/,
MarkovChainedPopSizes/initialMean/,
MarkovChainedPopSizes/useLogNormal/,
StarBeast3/Operators/=Standard/Operators/,
StarBeast3/Gene_Ploidy/,
StarBeast3/Taxon_Sets/,
StarBeast3/Priors/=Standard/Priors/,
StarBeast3/Species_Clock_Model/,
StarBeast3/Gene_Clock_Model/,
StarBeast3/MCMC/=Standard/MCMC/,
StarBeast3/Partitions/=Standard/Partitions/,
StarBeast3/Site_Model/=Standard/Site_Model/,
StarBeast3/Initialization/=Standard/Initialization/,
StarBeast3/Starting_tree/=Standard/Starting_tree/,
speciationRate/estimate/,
speciationRate/dimension/,
speciationRate/lower/,
speciationRate/minordimension/,
speciationRate/keys/,
speciationRate/upper/,
treelog/fileName/,
treelog/sort/,
treelog/sanitiseHeaders/,
treelog/logEvery/,
treelog/mode/,
CoalescentConstant/index/,
YuleModel/index/,
ClusterTree/clock.rate/,
ClusterTree/adjustTreeNodeHeights/,
ClusterTree/clusterType//'>


		<panel spec="beastfx.app.inputeditor.BeautiPanelConfig" panelname="Partitions" tiptext="Data Partitions" path="distribution/distribution[id='likelihood']/distribution/data" hasPartitions="none" icon="2220.pngx" forceExpansion="FALSE" type="beast.base.evolution.alignment.Alignment"/>
		<mergepoint id="aux-sb3-partitions-panels"/>

		<panel spec="beastfx.app.inputeditor.BeautiPanelConfig" panelname="Taxon Sets" tiptext="Specify taxon sets that make up species" path="operator[id='Reheight.t:Species']/taxonset" hasPartitions="none" icon="1.pngx" forceExpansion="TRUE"/>


		<panel spec="beastfx.app.inputeditor.BeautiPanelConfig" panelname="Tip Dates" tiptext="Allows to specify date that a taxon was sampled" path="operator[id='ParallelMCMCTreeOperator']/speciesTree" hasPartitions="none" icon="2.png.x" forceExpansion="TRUE"/>

		<panel spec="beastfx.app.inputeditor.BeautiPanelConfig" panelname="Gene Ploidy" tiptext="The ploidy for each gene (locus)" path="distribution/distribution[id='speciescoalescent']/distribution" hasPartitions="none" icon="2.pngx" forceExpansion="TRUE"/>


		
		<panel spec="beastfx.app.inputeditor.BeautiPanelConfig" panelname="Site Model" tiptext="Site model and substitution model specifications" path="siteModel" hasPartitions="SiteModel" icon="3.pngx" forceExpansion="TRUE"/>
		<mergepoint id="aux-sb3-sitemodel-panels"/>


		<panel spec='beastfx.app.inputeditor.BeautiPanelConfig' panelname="Gene Clock Model" tiptext="Clock model"
            path="distribution/distribution[id='likelihood']/distribution/branchRateModel" 
            type="starbeast3.evolution.branchratemodel.StarBeast3Clock"
			hasPartitions="none" icon="2.pngx" forceExpansion="TRUE"
        />
		<mergepoint id='aux-sb3-clockmodel-panels'/>

		<panel spec="beastfx.app.inputeditor.BeautiPanelConfig" panelname="Species Clock Model" icon='4.png.x' tiptext="Species Clock model" path="init/sharedRateModel/branchRateModel" forceExpansion="TRUE"/>
		<mergepoint id='aux-sb3-clockmodel-panels'/>


		<panel spec="beastfx.app.inputeditor.BeautiPanelConfig" panelname="State" tiptext="Initial state" path="state/stateNode" hasPartitions="none" icon="6.pngx" forceExpansion="TRUE_START_COLLAPSED" isVisible="false"/>
		<mergepoint id="aux-sb3-initilisation-panels"/>

		<panel spec="beastfx.app.inputeditor.BeautiPanelConfig" panelname="Priors" tiptext="Other priors" path="distribution/distribution[id='prior']/distribution" hasPartitions="none" icon="7.pngx" forceExpansion="TRUE_START_COLLAPSED" type="beast.base.inference.Distribution" buttonStatus="ADD_ONLY"/>
		<mergepoint id="aux-sb3-priors-panels"/>

		<panel spec="beastfx.app.inputeditor.BeautiPanelConfig" panelname="Operators" tiptext="MCMC Operator details" path="operator" hasPartitions="none" icon="8.pngx" forceExpansion="TRUE_START_COLLAPSED" isVisible="false"/>
		<mergepoint id="aux-sb3-operators-panels"/>

		<panel spec="beastfx.app.inputeditor.BeautiPanelConfig" panelname="MCMC" tiptext="MCMC parameters" path="" hasPartitions="none" icon="9.pngx" forceExpansion="TRUE"/>
		<mergepoint id="aux-sb3-panels"/>
		
		

		
	
		<alignmentProvider id="Import Alignment" spec="starbeast3.app.beauti.StarBeastAlignmentProvider3" template="@StarBEASTPartitionTemplate3"/>


		<partitiontemplate id="StarBEASTPartitionTemplate3" spec="beastfx.app.inputeditor.BeautiSubTemplate" class="beast.base.evolution.likelihood.TreeLikelihood" mainid="mcmc">

			<![CDATA[
				<tree id="Tree.t:$(n)" name="stateNode">
					<taxonset id="TaxonSet.$(n)" spec="beast.base.evolution.alignment.TaxonSet" alignment="@$(n)"/>
				</tree>


				<distribution id="treePrior.t:$(n)" spec="starbeast3.evolution.speciation.GeneTreeForSpeciesTreeDistribution" speciesTree="@Tree.t:Species" populationModel="@speciesTreePopulationModel" speciesTreePrior="@SpeciesTreePopSize.Species" tree="@Tree.t:$(n)"/>
			
				<logger id='treelog.t:$(n)' spec='beast.base.inference.Logger' logEvery="10000" fileName="$(tree).trees" mode='tree'>
					<log id='TreeWithMetaDataLogger.t:$(n)' spec='beast.base.evolution.TreeWithMetaDataLogger' tree='@Tree.t:$(n)'>
					</log>
				</logger>

				
				

				<distribution 
					id="ParallelMCMCTreeOperatorLikelihood.$(n)"
					spec="starbeast3.operators.ParallelMCMCTreeOperatorTreeDistribution"
					tree="@Tree.t:$(n)" 
					geneprior="@treePrior.t:$(n)" 
					treelikelihood="@treeLikelihood.$(n)"/>
					
					
				<!-- site model -->
				<plugin gammaCategoryCount="0" id="SiteModel.s:$(n)" spec="SiteModel">
						<mutationRate spec="parameter.RealParameter" id="mutationRate.s:$(n)" value="1.0" estimate="false"/>
						<shape id="gammaShape.s:$(n)" spec="parameter.RealParameter" value="1.0" estimate="false" lower="0"/>
						<proportionInvariant id="proportionInvariant.s:$(n)" spec="parameter.RealParameter" value="0.0" lower="0" upper="1" estimate="false"/>
				</plugin>


				<plugin data="@$(n)" id="treeLikelihood.$(n)" spec="TreeLikelihood" tree="@Tree.t:$(n)">
					
					<siteModel idref="SiteModel.s:$(n)"/>
					<branchRateModel id="GeneTreeClock.c:$(n)" spec="starbeast3.evolution.branchratemodel.StarBeast3Clock" sharedRateModel="@branchRatesModel.Species" tree="@Tree.t:$(n)">
						<clock.rate idref="clockRate.c:$(n)" />
					</branchRateModel>
	
				</plugin>
				


				<log id="TreeStat.t:$(n)" spec="beast.base.evolution.tree.TreeStatLogger" tree="@Tree.t:$(n)"/>
				<log id="TreeDistanceNJ.t:$(n)" metric="RNNI" spec="beastlabs.evolution.tree.TreeDistanceLogger" tree="@Tree.t:$(n)">
					<ref clusterType="neighborjoining" spec="beast.base.evolution.tree.ClusterTree" taxa="@$(n)"/>
				</log>
				<log id="TreeDistanceUPGMA.t:$(n)" metric="RNNI" spec="beastlabs.evolution.tree.TreeDistanceLogger" tree="@Tree.t:$(n)">
					<ref clusterType="upgma" spec="beast.base.evolution.tree.ClusterTree" taxa="@$(n)"/>
				</log>



				<prior id='MutationRatePrior.s:$(n)' x='@mutationRate.s:$(n)'>
					<LogNormal meanInRealSpace="true" name="distr" M="1" S="0.6" />
				</prior>
				<prior id='GammaShapePrior.s:$(n)' x='@gammaShape.s:$(n)'><distr spec="beast.base.inference.distribution.Exponential" mean='1'/></prior>
				<prior id='PropInvariantPrior.s:$(n)' x='@proportionInvariant.s:$(n)'><distr spec="beast.base.inference.distribution.Uniform" lower='0' upper='1'/></prior>


				<prior id='ClockRatePrior.c:$(n)' x='@clockRate.c:$(n)'>
					<LogNormal meanInRealSpace="true" name="distr" M="1" S="0.6" />
				</prior>


				<clock.rate id="clockRate.c:$(n)" spec="parameter.RealParameter" value="1.0" estimate="true" lower="0"/>

				<operator id="proportionInvariantScaler.s:$(n)" spec="beast.base.inference.operator.kernel.BactrianIntervalOperator" scaleFactor="0.75" weight="0.1" parameter="@proportionInvariant.s:$(n)"/>
				<operator id="mutationRateScaler.s:$(n)" spec="beast.base.evolution.operator.kernel.BactrianScaleOperator" scaleFactor="0.75" weight="0.1" parameter="@mutationRate.s:$(n)"/>
				<operator id="gammaShapeScaler.s:$(n)" spec="beast.base.evolution.operator.kernel.BactrianScaleOperator" scaleFactor="0.75" weight="0.1" parameter="@gammaShape.s:$(n)"/>

				<operator id="clockRateScaler.c:$(n)" spec="beast.base.evolution.operator.kernel.BactrianScaleOperator" scaleFactor="0.75" weight="0.1" parameter="@clockRate.c:$(n)"/>



			]]>


			<connect srcID="treeLikelihood.$(n)" targetID="likelihood" inputName="distribution" if="isInitializing"/>
			<connect srcID="ParallelMCMCTreeOperator" targetID="mcmc" inputName="operator" if="isInitializing"/>
			
			<connect srcID="treelog.t:$(n)" targetID="mcmc" inputName="logger" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>


			<connect srcID="Tree.t:$(n)" targetID="SBI" inputName="gene" if="inlikelihood(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="ParallelMCMCTreeOperatorLikelihood.$(n)" targetID="ParallelMCMCTreeOperator" inputName="distribution" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>


			<connect srcID="treePrior.t:$(n)" targetID="speciescoalescent" inputName="distribution" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="treePrior.t:$(n)" targetID="Reheight.t:Species" inputName="gene" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="treePrior.t:$(n)" targetID="CoordinatedExponential.t:Species" inputName="gene" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="treePrior.t:$(n)" targetID="CoordinatedUniform.t:Species" inputName="gene" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="treePrior.t:$(n)" targetID="CoordinatedExchange" inputName="gene" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>


			
			<connect srcID="Tree.t:$(n)" targetID="updown.all" inputName="down" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="clockRate.c:$(n)" targetID="updown.all" inputName="up" if="inposterior(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true"/>

			
			<connect srcID="treeLikelihood.$(n)" targetID="tracelog" inputName="log" if="inposterior(treeLikelihood.$(n))"/>
			<connect srcID="treePrior.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="TreeStat.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="TreeDistanceNJ.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="TreeDistanceUPGMA.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>



			<connect srcID="Tree.t:$(n)" targetID="treeTopFinder" inputName="tree" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="Tree.t:$(n)" targetID="state" inputName="stateNode" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>

			<connect srcID="treePrior.t:$(n)" targetID="PopSizeGibbsSampler.Species" inputName="gene" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>


			<!--
			Since "Species" is treated as a separate partition, we need the following
			hacks to get rid of undesirable Tree.t:Species connections
			-->
			<connect srcID="Tree.t:Species" targetID="SBI" inputName="gene" if="Tree.t:$(n)/estimate=XXX"/>
			<connect srcID="Tree.t:Species" targetID="treeTopFinder" inputName="tree" if="Tree.t:$(n)/estimate=XXX"/>

			<!-- end hacks -->
			

			<connect method="beastfx.app.inputeditor.SiteModelInputEditor.customConnector"/>

			<!-- Substitution model -->
            <connect srcID='proportionInvariant.s:$(n)'       targetID='state' inputName='stateNode' if='inlikelihood(proportionInvariant.s:$(n)) and proportionInvariant.s:$(n)/estimate=true'/>
            <connect srcID='mutationRate.s:$(n)'              targetID='state' inputName='stateNode' if='inlikelihood(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true'/>
            <connect srcID='gammaShape.s:$(n)'                targetID='state' inputName='stateNode' if='inlikelihood(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true'/>



            <connect srcID='clockRate.c:$(n)'              targetID='state' inputName='stateNode' if='inlikelihood(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true'/>
            <connect srcID='clockRate.c:$(n)'              targetID='tracelog' inputName='log' if='inlikelihood(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true'/>



            <!--
			<connect srcID="mutationRate.s:$(n)" targetID="updown.all" inputName="up" if="inposterior(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true"/>
			-->

            <connect srcID='proportionInvariant.s:$(n)'       targetID='tracelog' inputName='log' if='inposterior(proportionInvariant.s:$(n)) and proportionInvariant.s:$(n)/estimate=true'/>
            <connect srcID='mutationRate.s:$(n)'              targetID='tracelog' inputName='log' if='inlikelihood(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true'/>
            <connect srcID='gammaShape.s:$(n)'                targetID='tracelog' inputName='log' if='inlikelihood(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true'/>

            <connect srcID='GammaShapePrior.s:$(n)'          targetID='prior' inputName='distribution' if='inlikelihood(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true'>Prior on gamma shape for partition s:$(n)</connect>
            <connect srcID='PropInvariantPrior.s:$(n)'       targetID='prior' inputName='distribution' if='inlikelihood(proportionInvariant.s:$(n)) and proportionInvariant.s:$(n)/estimate=true'>Prior on proportion invariant for partition s:$(n)</connect>
			<connect srcID='MutationRatePrior.s:$(n)'        targetID='prior' inputName='distribution' if='inlikelihood(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true'>Prior on gene tree relative mutation rate for partition s:$(n)</connect>


			<connect srcID='ClockRatePrior.c:$(n)'        targetID='prior' inputName='distribution' if='inlikelihood(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true'>Prior on gene tree relative clock rate for partition s:$(n)</connect>



			<connect srcID="proportionInvariantScaler.s:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(proportionInvariant.s:$(n)) and proportionInvariant.s:$(n)/estimate=true">
				Scales proportion of invariant sites parameter of partition $(n)
			</connect>
			<connect srcID="mutationRateScaler.s:$(n)" targetID="mcmc" inputName="operator" if="nooperator(FixMeanMutationRatesOperator) and inlikelihood(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true">
				Scales mutation rate of partition s:$(n)
			</connect>
			<connect srcID="gammaShapeScaler.s:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true">
				Scales gamma shape parameter of partition s:$(n)
			</connect>



			<connect srcID="clockRateScaler.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true">
				Scales clock rate of partition s:$(n)
			</connect>



			<!-- Yule -->
			<connect srcID="speciationRate.t:$(n)" targetID="state" inputName="stateNode" if="inposterior(YuleModel.t:$(n)) and inposterior(speciationRate.t:$(n)) and speciationRate.t:$(n)/estimate=true"/>
			<connect srcID="speciationRate.t:$(n)" targetID="updown.all" inputName="up" if="inposterior(YuleModel.t:$(n)) and inposterior(speciationRate.t:$(n)) and speciationRate.t:$(n)/estimate=true"/>
			<connect srcID="speciationRatePrior.t:$(n)" targetID="prior" inputName="distribution" if="inposterior(YuleModel.t:$(n)) and inposterior(speciationRate.t:$(n)) and speciationRate.t:$(n)/estimate=true">
				Prior on birth (a.k.a. speciation) rate applied to the species tree
			</connect>
			<connect srcID="AdaptableOperatorSampler.YuleModel.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(YuleModel.t:$(n)) and inposterior(speciationRate.t:$(n)) and speciationRate.t:$(n)/estimate=true">
				Adaptively operate on the the birth (a.k.a. speciation) rate of the species tree
			</connect>


			<connect srcID="speciationRate.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(YuleModel.t:$(n)) and inposterior(speciationRate.t:$(n)) and speciationRate.t:$(n)/estimate=true"/>
			<connect srcID="speciationRate.t:$(n)" targetID="SBI" inputName="birthRate" if="inposterior(YuleModel.t:$(n)) and inposterior(speciationRate.t:$(n))"/>
			


			<mergepoint id="aux-sb3-partitiontemplate"/>
		</partitiontemplate>

		<alignmentProvider id="Add Morphology to Species Tree" spec='starbeast3.app.beauti.StarBeast3MorphModelAlignmentProvider' template='@StarBEAST3MKTrait'/>

		<subtemplate id='StarBEAST3MKTrait' class='beast.base.evolution.alignment.FilteredAlignment' mainid='$(n)'
					 suppressInputs = 'morphmodels.evolution.substitutionmodel.LewisMK.stateNumber,
			morphmodels.evolution.substitutionmodel.LewisMK.datatype,
			morphmodels.evolution.substitutionmodel.LewisMK.frequencies,
			morphmodels.evolution.substitutionmodel.LewisMK.proportionInvariant'>

			<![CDATA[
			<stateNode id="clockRate.c:$(n)" spec="parameter.RealParameter" lower="0.0" value="1.0" estimate="true"/>

			<distribution id="morphTreeLikelihood.$(n)" spec="TreeLikelihood" tree="@Tree.t:Species">
				<data spec="beast.base.evolution.alignment.FilteredAlignment" id="$(n)" filter="0-end">
					<userDataType spec="beast.base.evolution.datatype.StandardData" id="morphDataType.$(n)" />
				</data>
				<siteModel spec="SiteModel" id="SiteModel.s:$(n)" gammaCategoryCount="0">
					<substModel spec="morphmodels.evolution.substitutionmodel.LewisMK" id="LewisMK.s:$(n)" datatype="@morphDataType.$(n)"/>
					<mutationRate spec="parameter.RealParameter" id="mutationRate.s:$(n)" value="1.0" estimate="false"/>
					<shape spec="parameter.RealParameter" id="gammaShape.s:$(n)" value="1.0" estimate="false"/>
				</siteModel>
				<!-- Species-tree strict clock for this morphology partition -->

				<branchRateModel id="strictClockModel.c:$(n)" spec="StrictClockModel" clock.rate="@clockRate.c:$(n)"/>
			</distribution>

			<prior id="MutationRatePrior.s:$(n)" x="@mutationRate.s:$(n)">
				<distr spec="OneOnX"/>
			</prior>

			<prior id="clockRatePrior.c:$(n)" x="@clockRate.c:$(n)">
				<distr spec="beast.base.inference.distribution.LogNormalDistributionModel" meanInRealSpace="true">
					<S id="clockRatePriorStdev.s:$(n)" spec="parameter.RealParameter" lower="0.0" value="1.0" estimate="false"/>
					<M id="clockRatePriorMean.s:$(n)" spec="parameter.RealParameter" lower="0.0" value="1.0" estimate="false"/>
				</distr>
			</prior>

			<prior id="GammaShapePrior.s:$(n)" x="@gammaShape.s:$(n)">
				<distr spec="LogNormalDistributionModel" meanInRealSpace="true" M="1.0" S="2.0"/>
			</prior>

			<operator id="mutationRateScaler.s:$(n)" spec="ScaleOperator" scaleFactor="0.75" weight="1.0" parameter="@mutationRate.s:$(n)"/>
			<operator id="gammaShapeScaler.s:$(n)" scaleFactor="0.75" spec="ScaleOperator" weight="1.0" parameter="@gammaShape.s:$(n)"/>
			<operator id="clockRateScaler.c:$(n)" spec="ScaleOperator" scaleFactor="0.5" weight="3.0" parameter="@clockRate.c:$(n)"/>
		]]>

			<connect srcID="morphTreeLikelihood.$(n)" targetID="likelihood" inputName="distribution" if="isInitializing"/>
			<connect method="beastfx.app.inputeditor.SiteModelInputEditor.customConnector"/>

			<connect srcID="MutationRatePrior.s:$(n)" targetID="prior" inputName="distribution" if="nooperator(FixMeanMutationRatesOperator) and inposterior(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true"/>

			<connect srcID="mutationRate.s:$(n)" targetID="state" inputName="stateNode" if="inposterior(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true"/>
			<connect srcID="gammaShape.s:$(n)" targetID="state" inputName="stateNode" if="inposterior(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true"/>
			<connect srcID="clockRate.c:$(n)" targetID="state" inputName="stateNode" if="inposterior(Tree.t:$(n)) and clockRate.c:$(n)/estimate=true"/>
			<connect srcID='clockRatePrior.c:$(n)'  targetID='prior' inputName='distribution' if='inlikelihood(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true'>Prior on strict clock rate for morphological data c:$(n)</connect>

			<connect srcID="mutationRateScaler.s:$(n)" targetID="mcmc" inputName="operator" if="inposterior(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true"/>
			<connect srcID="gammaShapeScaler.s:$(n)" targetID="mcmc" inputName="operator" if="inposterior(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true"/>
			<connect srcID="clockRateScaler.c:$(n)" targetID="mcmc" inputName="operator" if="inposterior(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true"/>

			<connect srcID="morphTreeLikelihood.$(n)" targetID="tracelog" inputName="log" if="inlikelihood(morphTreeLikelihood.$(n))"/>
			<connect srcID="mutationRate.s:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true"/>
			<connect srcID="gammaShape.s:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true"/>
			<connect srcID="clockRate.c:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true"/>

			<connect srcID="GammaShapePrior.s:$(n)" targetID="prior" inputName="distribution" if="inlikelihood(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true"/>

		</subtemplate>

		
		<mergepoint id="sb3SubstModelTemplates"/>
		<mergepoint id="sb3ClockModelTemplates"/>
		<mergepoint id="sb3TreePriorTemplates"/>
		<mergepoint id="parametricDistributions"/>


		
		
	</beauticonfig>
	
	
	
<taxonset id="taxonsuperset" spec="starbeast3.tree.StarBeast3TaxonSet">
	<taxon spec="beast.base.evolution.alignment.TaxonSet" id="Beauti2DummyTaxonSet">
		<taxon spec="beast.base.evolution.alignment.Taxon" id="dummyTaxon"/>
	</taxon>
</taxonset>

<tree id="Tree.t:Species" spec="starbeast3.tree.SpeciesTree" taxonset="@taxonsuperset" estimate="true"/>




<run chainLength="10000000" id="mcmc" spec="MCMC" storeEvery="50000">
    <state id="state" storeEvery="5000">
	
	

	
	<stateNode idref="Tree.t:Species" />
	<stateNode idref="speciationRate.t:Species" />
        <parameter id="popSize" name="stateNode" value="1" lower="0.0"/>
	
        <parameter id="popMean" name="stateNode" value="1" lower="0"/>
    </state>

    <distribution id="posterior" spec="beast.base.inference.CompoundDistribution">


			
		<distribution id="speciescoalescent" spec="beast.base.inference.CompoundDistribution">
		
			
		
		</distribution>
		
					
		<distribution bottomPopSize="@popSize" gammaParameter="@popMean" id="SpeciesTreePopSize.Species" spec="starbeast3.evolution.speciation.SpeciesTreePrior" popFunction="constant" taxonset="@taxonsuperset" tree="@Tree.t:Species" treePrior="@YuleModel.t:Species">
				<populationModel id="speciesTreePopulationModel" spec="starbeast3.evolution.speciation.ConstantPopulations" populationSizes="@popSize" speciesTree="@Tree.t:Species" />
		</distribution>


        
        <distribution id="prior" spec="beast.base.inference.CompoundDistribution">
            <distribution id="YuleModel.t:Species" spec="beast.base.evolution.speciation.YuleModel" tree="@Tree.t:Species">
				<birthDiffRate spec="parameter.RealParameter" id="speciationRate.t:Species" value="1.0" lower="0.0" estimate="true"/>
			</distribution>
			

			
	
	
			
			<distribution id="speciationRatePrior.t:Species" spec="beast.base.inference.distribution.Prior" x="@speciationRate.t:Species">
				<distr spec="beast.base.inference.distribution.Uniform" lower="0.0" upper="10000.0"/>
			</distribution>


		    <prior id="popMean.prior" name="distribution" x="@popMean">
				<OneOnX name="distr"/>
            </prior>
			

			
        </distribution>
		
		
		 <distribution id="vectorPrior" spec="beast.base.inference.CompoundDistribution">
		 
		 			
			<prior id="constPopSizesPrior.Species" name="distribution" x="@popSize">
				<distr id="popPriorDistr.InverseGamma" spec="beast.base.inference.distribution.InverseGamma" alpha="2.0" beta="@popMean"/>
            </prior>
			
		 
		 
		 </distribution>
        
        <distribution id="likelihood" spec="beast.base.inference.CompoundDistribution" useThreads="true">

		</distribution>
    </distribution>
	
	
	
	<operatorschedule id="operatorSchedule" spec="starbeast3.core.OperatorScheduleRecalculator">
		<subschedule id="operatorSubschedule" operatorPattern="^ParallelMCMCTreeOperator$" spec="OperatorSchedule" weight="1" weightIsPercentage="true"/>
	</operatorschedule>
	

    <operator id="Reheight.t:Species" spec="starbeast3.operators.NodeReheight2" taxonset="@taxonsuperset" tree="@Tree.t:Species" weight="30.0">
    </operator>

    <operator id="CoordinatedExponential.t:Species" spec="starbeast3.operators.CoordinatedExponential" speciesTree="@Tree.t:Species" weight="15.0">
    </operator>

    <operator id="CoordinatedUniform.t:Species" spec="starbeast3.operators.CoordinatedUniform" speciesTree="@Tree.t:Species" weight="30.0">
    </operator>
	
	


	
	
	
	
	
	<operator id="TreeRootScaler.t:Species" rootOnly="true" scaleFactor="0.7" spec="beast.base.evolution.operator.kernel.BactrianScaleOperator" tree="@Tree.t:Species" weight="3.0"/>
	<operator id="BactrianNodeOperator.t:Species" spec="beast.base.evolution.operator.kernel.BactrianNodeOperator" tree="@Tree.t:Species" weight="3.0"/>
	<operator id="AdaptableTopologyOperator.lengths.Species" spec="beast.base.evolution.operator.AdaptableOperatorSampler" tree="@Tree.t:Species" uniformp="0.1" weight="100">



		
		<operator idref="BactrianNodeOperator.t:Species" />
		<operator id="TreeScaler.t:Species" scaleFactor="0.01" spec="beast.base.evolution.operator.kernel.BactrianScaleOperator" tree="@Tree.t:Species" weight="1.0"/>
		
		<operator idref="CoordinatedUniform.t:Species" />
		<operator idref="CoordinatedExponential.t:Species" />



	
		
		
		<!-- UpDown  -->
		<operator id="updown.all" spec="beast.base.inference.operator.kernel.BactrianUpDownOperator" scaleFactor="0.75" weight="1.0">
		 	<up idref="speciationRate.t:Species"/>               
            <down idref="Tree.t:Species"/>
                    
            <down idref="popSize"/>
            <down idref="popMean"/>
                
        </operator>
		
		
	
	</operator> 
	
	
	
	<operator bactrian="true" chainCoverage="1" id="ParallelMCMCTreeOperator" includeRealParameters="true" speciesTree="@Tree.t:Species" learning="false" nregression="50" otherState="@state" runtime="1000" schedule="@operatorSchedule" spec="starbeast3.operators.ParallelMCMCTreeOperator" targetCPU="0" threads="-1" weight="1">
   
	</operator>
   
   
   <operator id="PopSizeGibbsSampler.Species" spec='starbeast3.operators.PopSizeGibbsSampler' popSizes="@popSize" weight="50.0" gammaprior="@popPriorDistr.InverseGamma" >
    </operator>
	
	

	<operator id="AdaptableOperatorSampler.popmean:Species" parameter="@popMean" spec="beast.base.evolution.operator.AdaptableOperatorSampler" weight="5.0">

		<!-- Scale -->
		<operator id="Scale.popmean" parameter="@popMean" scaleFactor="0.75" spec="beast.base.evolution.operator.kernel.BactrianScaleOperator" weight="1.0"/>

		<!-- UpDown -->
		<operator idref="updown.all"/>


		<!-- SampleFromPrior -->
		<operator id="SampleFromPriorOperator.popmean" np="1" parameter="@popMean" prior2="@popMean.prior" spec="orc.operators.SampleFromPriorOperator" weight="1"/>


	</operator>
	
	
	
	<operator id="AdaptableOperatorSampler.YuleModel.t:Species" parameter="@speciationRate.t:Species" spec="beast.base.evolution.operator.AdaptableOperatorSampler" weight="5.0">
		<operator id="Scale.YuleModel" parameter="@speciationRate.t:Species" scaleFactor="0.75" spec="beast.base.evolution.operator.kernel.BactrianScaleOperator" weight="1.0"/>
		<operator idref="updown.all"/>
		<operator id="SampleFromPriorOperator.YuleModel" np="1" parameter="@speciationRate.t:Species" prior2="@speciationRatePrior.t:Species" spec="orc.operators.SampleFromPriorOperator" weight="1"/>
	</operator>
	
	



    <logger fileName="starbeast3.log" id="tracelog" logEvery="10000" model="@posterior" sort="smart" spec="Logger">
        <log idref="posterior"/>
        <log idref="likelihood"/>
        <log idref="prior"/>
		<log idref="vectorPrior"/>
        <log idref="speciescoalescent"/>
		<log id="TreeStat.Species" spec="beast.base.evolution.tree.TreeStatLogger" tree="@Tree.t:Species"/>
        <log idref="YuleModel.t:Species"/>
        <log idref="popMean"/>
        <log idref="popSize"/>
    </logger>



    <logger fileName="species.trees" id="speciesTreeLogger" logEvery="10000" mode="tree" spec="Logger">
        <log id="SpeciesTreeLoggerX" popSize="@popSize" spec="starbeast3.core.SpeciesTreeLogger" speciesTreePrior="@SpeciesTreePopSize.Species" tree="@Tree.t:Species">
            <treetop id="treeTopFinder" spec="beast.base.evolution.speciation.TreeTopFinder">
            </treetop>
        </log>
    </logger>

    <logger id="screenlog" logEvery="10000" spec="Logger">
        <log idref="posterior"/>
        <log arg="@posterior" spec="util.ESS"/>
        <log idref="likelihood"/>
        <log idref="prior"/>
    </logger>

    <init id="SBI" spec="starbeast3.core.StarBeastStartState" 
    	estimate="false" 
		method="point-estimate"
    	popMean="@popMean" 
		speciesTree="@Tree.t:Species"
		speciesTreePrior="@SpeciesTreePopSize.Species">
		
		
			<!--
			<sharedRateModel idref="branchRatesModel.Species"/>
			-->
			
			<sharedRateModel id="branchRatesModel.Species" spec="starbeast3.evolution.branchratemodel.SharedSpeciesClockModel">
			
				
				<branchRateModel id="strictClockModel.Species" tree="@Tree.t:Species" spec="starbeast3.evolution.branchratemodel.StrictClockModelSB3">
					 <clock.rate id='SpeciesTreeStrictClockRate' spec='parameter.RealParameter' lower="0.0" value='1.0' estimate='false'/>
				</branchRateModel>
				

	
		</sharedRateModel>



    </init>
	
	

	




</run>


</beast>
